/** @format */

@use '../../_mixin.scss' as mixin;

body {
  > nav {
    // FIXME: Stop IntelliJ platform from adding a space between number and unit when formatting.
    @container body (width < 70rem) {
      ~ main {
        // TODO: See, this is the result of trying to pull off something smart.
        //       I had to use 1fr on both "paddings",
        //       instead of just doing it the good ol' way by setting the max-inline-size, padding, and margin: 0 auto.
        // FIXME: Whatever, I can't afford to lose time on this right now.
        //        I'll just push to main and see what happens.
        grid-template-columns: minmax(min(4vw, 4.8rem), 1fr) minmax(auto, 75ch) minmax(
            min(4vw, 4.8rem),
            1fr
          );

        > aside {
          display: none;
        }
      }
    }

    @container body (width < 60rem) {
      overflow-x: visible;

      > details {
        min-inline-size: fit-content;

        > summary {
          &::after {
            color: var(--foreground);
            background-color: var(--background);
            border: 0.25rem solid var(--foreground);
            z-index: 5;
          }
        }

        &[open] {
          color: var(--foreground);
          background-color: var(--background);

          z-index: 5;

          > summary::after {
            color: unset;
            background-color: unset;
            border: unset;
          }
        }
      }
    }

    grid-area: nav;

    font-size: var(--font-size-ratio);

    block-size: 100vh;

    position: sticky;
    top: 0;

    //   transform: scaleX(-1);

    // overflow-y: auto;
    > details {
      // display: flex;
      // flex-direction: row;
      font-weight: bold;
      block-size: 100%;
      // transform: scaleX(-1);

      a {
        text-decoration-line: none;
      }

      > * {
      }

      > * + * {
        margin-block-start: calc(var(--clam) * 0.5);
      }

      > summary {
        text-align: center;
        align-items: baseline;

        > a {
          display: none;
          flex-grow: 9999;

          > h1 {
            line-height: inherit;
            font-size: 1.5em;
            text-align: center;
          }
        }

        &::after {
          content: 'â‰¡';

          margin-inline-end: 0;
        }
      }

      ul {
        list-style-type: none;
      }

      > ul {
        // height: 100%;
        // flex-basis: 0;
        // position: fixed;
        // top: 0;
        // Chrome does not support overflow-block ?
        // overflow-y: scroll;
        // block-size: 80vh;
        // block-size: min-content;
        // overflow-y: auto;
        // scrollbar-gutter: stable;

        // padding-inline-start: 0;
        padding-inline-end: 1em;
        // font-size: 1.5rem;

        ul {
          border-inline-start: 0.25em solid var(--foreground);
        }

        li {
          * + ul {
            margin-block-start: 2em;
          }
        }
      }

      &[open] {
        overflow-y: scroll;

        > summary {
          > a {
            display: block;
          }

          &::after {
            content: 'ðŸ¡¨';
          }
        }
      }
    }
  }
}
