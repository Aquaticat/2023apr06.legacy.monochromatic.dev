@charset "UTF-8";
/*
 * IntelliJ Platform bug, false positive of "Mismatched property value" when using colors for border-block/inline.
 *
 * The design right now is horrible.
 * Maybe I really should have designed in Figma first.
 *
 * Also not using the :has() selector right now because Firefox doesn't fully support it and doesn't enable it by default.
 * Considering using it anyways because every other browser has support and [We plan to work on this in the first half of this year](https://bugzilla.mozilla.org/show_bug.cgi?id=418039#c62).
 */
@media (prefers-color-scheme: dark) {
  :root {
    --foreground: white;
    --background: black;
  }
}
@media (prefers-color-scheme: light) {
  :root {
    --foreground: black;
    --background: white;
  }
}
:root * + section {
  margin-block-start: 3rem;
}
:root * + :is(ol, ul) {
  margin-block-start: 1.75rem;
}
:root li :is(ol, ul) {
  margin-block-start: 0.4rem;
  line-height: 1.3;
}
:root :is(h1, h2, h3, h4, h5) + section {
  margin-block-start: 1rem;
}

x-wrapper {
  display: block;
  color-scheme: light dark;
}

* {
  box-sizing: border-box;
  margin-block: 0;
}

html {
  color: var(--foreground);
  background-color: var(--background);
  font-family: sans-serif;
  letter-spacing: 0.1ch;
  line-height: 1.5;
}

body {
  margin-inline: 0;
}

header {
  color: white;
  background-color: black;
  padding-block: 5rem;
  border-block-end: var(--foreground) solid 0.5rem;
}
header > hgroup {
  text-align: unset;
}
header > hgroup > h1 {
  text-align: unset;
}
header > hgroup > h1 + p {
  font-size: clamp(1.25rem, 1.75rem, 2vw);
  transform: translateX(0.1ch);
}

hgroup {
  max-inline-size: 60ch;
  box-sizing: content-box;
  padding-inline: 8vw;
  margin-inline: auto;
  text-align: center;
}
hgroup > :is(h1, h2, h3, h4, h5, h6) {
  line-height: unset;
  margin-block-end: clamp(0.2rem, 0.5rem, 1vw);
}

main {
  max-inline-size: 90ch;
  box-sizing: content-box;
  margin-inline: auto;
  padding-inline: 4ch;
  margin-block: clamp(1.75rem, 4rem, 5vw);
}
main * + * {
  margin-block-start: 1rem;
}

h1 {
  line-height: 2;
  font-size: clamp(2.5rem, 4rem, 8vw);
  font-weight: 900;
  text-align: center;
  margin-block-end: clamp(2rem, 4rem, 5vw);
  /**
   * Solution for font width greater than container width problem.
   *
   * Taken from https://stackoverflow.com/a/32570813 CC BY-SA 3.0
   * which credited https://stackoverflow.com/a/20249560/5061744 CC BY-SA 3.0
   *
   * Update: Problem not solved. (Why?)
   * Decided to use Mono<hromᴧti< as content to give the illusion that it's centered.
   */
}

h2 {
  line-height: 2;
  font-size: clamp(1.75rem, 2.5rem, 6vw);
  text-align: center;
}

h3 {
  line-height: 1.75;
  font-size: clamp(1.2rem, 1.5rem, 4vw);
}

h4 {
  line-height: 1.25;
  font-size: clamp(1rem, 1.25rem, 3vw);
  font-weight: normal;
}

h5 {
  font-size: clamp(0.9rem, 1.1rem, 2.5vw);
}

hr {
  height: 1rem;
  border-inline: none;
  border-block: 0.25rem solid var(--foreground);
  margin-block: clamp(0.75rem, 3rem, 5vw);
  text-align: center;
  inline-size: calc(100% + 2rem);
  transform: translateX(-1rem);
  overflow: visible;
}
hr::after {
  content: "§";
  color: var(--foreground);
  font-size: 1.75rem;
  font-weight: bold;
  background-color: var(--background);
  padding-inline: 0.5rem;
  position: relative;
  top: -1.25rem;
}

/**
 * FIXME: Still haven't figured out how to prevent flexbox from changing sizes when opening and closing <detail>.
 */
summary {
  margin-block-end: 1.5rem;
  outline: none;
  display: flex;
  flex-wrap: nowrap;
  column-gap: 1em;
  align-items: center;
  inline-size: calc(100% + 2rem);
  transform: translateX(-1rem);
  padding-inline: 1rem;
  padding-block: 0.5rem;
  border-style: solid;
  border-color: var(--foreground);
  border-inline-start-color: var(--background);
  border-width: 0.25rem;
}
summary:has(h2) {
  border-width: 0.5rem;
}
summary:has(h4) {
  border-block-end-color: var(--background);
  padding-block: 0.25rem;
  inline-size: calc(100% + 0.5rem);
  transform: translateX(-0.25rem);
}
summary:has(h5) {
  border-block-color: var(--background);
  padding-block: 0;
  inline-size: calc(100% + 0.25rem);
  transform: translateX(-0.125rem);
}
summary > :is(h2, h3) {
  flex-grow: 99;
}
summary + * {
  margin-block-start: 0;
}

details + details {
  margin-block-start: clamp(2.5rem, 3rem, 6vw);
}
details > summary::after {
  margin-right: 0.875rem;
  content: ">";
  transform: translateY(0.05em);
  font-size: 2em;
}
details[open] > summary {
  border-inline-start-color: var(--foreground);
  border-block-end-color: var(--background);
}
details[open] > summary::after {
  content: "Λ";
  transform: translateY(0.04em);
  font-size: 1.6em;
}

:is(ol, ul) {
  padding-inline-start: 2ch;
}
:is(ol, ul) + * {
  margin-block-start: 1.5em;
}

li * + * {
  margin-block-start: 0.5rem;
}
li + li {
  margin-block-start: 1.25rem;
}
li li + li {
  margin-block-start: 0.75rem;
}
li > ol > li {
  list-style-type: upper-roman;
}
li > ul > li {
  list-style-type: square;
}

section + * {
  margin-block-start: 2rem;
}

a {
  color: var(--foreground);
  text-underline-offset: 0.5ex;
}
a:focus, a:hover, a:active {
  font-size: unset;
  color: var(--background);
  background-color: var(--foreground);
  box-shadow: 0.2ch 0 0 0 var(--foreground), -0.2ch 0 0 0 var(--foreground), 0 0.2ex 0 0 var(--foreground), 0 -0.2ex 0 0 var(--foreground), 0.2ch 0.2ex 0 0 var(--foreground), -0.2ch 0.2ex 0 0 var(--foreground), 0.2ch -0.2ex 0 0 var(--foreground), -0.2ch -0.2ex 0 0 var(--foreground);
  text-shadow: -0.01ch 0 0 var(--background), 0.01ch 0 0 var(--background), 0 0.01ex 0 var(--background), 0 -0.01ex 0 var(--background);
}

:is(pre, code) {
  font-family: "Source Code Pro", "SF Mono", Monaco, Inconsolata, "Fira Mono", "Droid Sans Mono", monospace, monospace;
}

.ul_direction_inlineStart {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  row-gap: 1em;
  column-gap: 2em;
  align-items: baseline;
}
.ul_direction_inlineStart > * + * {
  margin-block-start: 0;
}

label.button_importance_tertiary {
  background-color: black;
  text-transform: uppercase;
  font-family: "Source Code Pro", "SF Mono", Monaco, Inconsolata, "Fira Mono", "Droid Sans Mono", monospace;
  font-weight: bold;
  padding-block: clamp(0.3em, 0.4em, 1vw);
  padding-inline: clamp(0.5em, 0.75em, 1.5vw);
  border-color: white;
  border-style: solid;
  border-width: 0.2em;
  font-size: clamp(1em, 1.2em, 2.5vw);
}
label.button_importance_tertiary:focus, label.button_importance_tertiary:hover, label.button_importance_tertiary:active {
  color: black;
  background-color: white;
  font-weight: 900;
}
label.button_importance_tertiary input {
  visibility: hidden;
  position: absolute;
  left: -9999;
}

#colorSchemeToggle {
  position: absolute;
  right: 0;
  top: 0;
  display: flex;
}
#colorSchemeToggle::after {
  content: "= theme";
}
#colorSchemeToggle:focus::after, #colorSchemeToggle:hover::after, #colorSchemeToggle:active::after {
  content: " !theme";
}
#colorSchemeToggle::before {
  font-size: 1.5em;
  content: "☉";
  height: 1em;
  width: 1em;
  transform: translate(-0.2ch, -0.45ex);
}
#colorSchemeToggle:has(input[type=checkbox]:checked)::before {
  font-size: 1.4em;
  content: "☽";
  transform: translate(0, -0.4ex);
}

/*# sourceMappingURL=index.css.map */
